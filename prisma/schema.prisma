// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  clerkId       String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  properties    Property[]
  subscription  Subscription?
}

model Property {
  id                Int                @id @default(autoincrement())
  name              String
  location          String
  description       String?
  status            String?            @default("Available")
  amenities         String?
  images            String[]
  localFood         String?
  wifi              Json?
  applianceGuides   String?
  houseRules        String?
  rubbishAndBins    String?
  checkOutDay       String?
  emergencyContact  String?
  nearbyPlaces      String?
  qrScans           Int                @default(0)
  digitalGuide      String?
  userId            String
  user              User               @relation(fields: [userId], references: [id])
  maintenanceIssues MaintenanceIssue[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
}

model MaintenanceIssue {
  id          Int       @id @default(autoincrement())
  title       String
  issue       String
  status      String    @default("Open")
  propertyId  Int
  details     String?
  property    Property  @relation(fields: [propertyId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Subscription {
  id                   String    @id @default(cuid())
  name                 String
  price                Float
  propertyLimit        Int
  userId               String    @unique
  user                 User      @relation(fields: [userId], references: [id])
  stripeCustomerId     String?
  stripePriceId        String?
  stripeSubscriptionId String?
  status               String
  currentPeriodStart   DateTime
  currentPeriodEnd     DateTime
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}